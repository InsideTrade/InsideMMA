<controls:MetroWindow x:Class="Inside_MMA.Views.AllTradesCounterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Inside_MMA.Views"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:viewModels="clr-namespace:Inside_MMA.ViewModels"
        mc:Ignorable="d"
        Title="{Binding Seccode, StringFormat='MI {0}'}" Height="400" Width="500">
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <ToggleButton Width="30" IsChecked="{Binding IsAnchorEnabled}" controls:VisibilityHelper.IsCollapsed="{Binding AnchorCollapsed}"
              Height="30"
              Style="{DynamicResource MetroCircleToggleButtonStyle}">
                <Rectangle Width="15"
               Height="15"
               Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_anchor}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <Button Width="30" Command="{Binding LoadCommand}" Height="30" Style="{DynamicResource MetroCircleButtonStyle}" BorderThickness="0" controls:VisibilityHelper.IsCollapsed="{Binding LoadCollapsed}">
                <Rectangle Width="15" Height="15" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_disk_upload}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Resources>
    </controls:MetroWindow.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <CollectionViewSource x:Key="Source" IsLiveSortingRequested="True" Source="{Binding AllTradesCounters, Mode=OneWay}">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="Quantity" Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </Grid.Resources>
        <Canvas x:Name="Canvas" Height="{Binding ActualHeight, ElementName=Expander}" Background="{DynamicResource WindowBackgroundBrush}" ZIndex="100">
            <Expander x:Name="Expander" ExpandDirection="Down" Width="{Binding ActualWidth, ElementName=Canvas}" Background="{DynamicResource WindowBackgroundBrush}" MouseLeave="Expander_OnMouseLeave" >

                <StackPanel Width="{Binding ActualWidth, ElementName=Canvas}">
                    <Button Margin="5" HorizontalAlignment="Left" Command="{Binding BarChartCommand}" Content="bar chart">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AllTradesCounters.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Margin="5"  HorizontalAlignment="Left" Command="{Binding ClearData}">clear</Button>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Filter time:</Label>
                        <controls:TimePicker x:Name="Filter" IsEnabled="{Binding ElementName=CheckFilter, Path=IsChecked}" Margin="5" HorizontalAlignment="Left" PickerVisibility="All" SelectedTime="{Binding TimeFilterFrom}" controls:TextBoxHelper.Watermark="From:"/>
                        <controls:TimePicker x:Name="Filter2" IsEnabled="{Binding ElementName=CheckFilter, Path=IsChecked}" Margin="5" HorizontalAlignment="Left" PickerVisibility="All" SelectedTime="{Binding TimeFilterTo}" controls:TextBoxHelper.Watermark="To:"/>
                        <CheckBox x:Name="CheckFilter" IsChecked="{Binding IsFiltering}"></CheckBox>
                    </StackPanel>
                </StackPanel>

            </Expander>
        </Canvas>
        <DataGrid Grid.Row="1" ItemsSource="{Binding Source={StaticResource Source}}" GridLinesVisibility="All" IsReadOnly="True" SelectionMode="Extended" SelectionUnit="FullRow" SelectedItem="{Binding SelectedItem}" AutoGenerateColumns="False">
            <i:Interaction.Behaviors>
                <viewModels:DataGridSelectedItemsBlendBehavior SelectedItems="{Binding SelectedItems}" />
            </i:Interaction.Behaviors>
            <DataGrid.Columns>
                <DataGridTextColumn FontSize="13" Header="Size" FontWeight="Bold"
                      Binding="{Binding Quantity}" Width="*"/>
                <DataGridTextColumn FontSize="13" Header="Count" FontWeight="Bold"
                      Binding="{Binding Count}" Width="*" />
                <DataGridTextColumn FontSize="13" Header="Buy" FontWeight="Bold"
                      Binding="{Binding Buy}" Width="60"/>
                <DataGridTextColumn FontSize="13" Header="Sell" FontWeight="Bold"
                      Binding="{Binding Sell}" Width="60" />
                <DataGridTextColumn FontSize="13" Header="Delta" FontWeight="Bold"
                                    Binding="{Binding Delta}" Width="*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Buysell}" Value="S">
                                    <Setter Property="Foreground" Value="#FF5252"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Buysell}" Value="B">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Buysell}" Value="">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn FontSize="13" Header="Balance" FontWeight="Bold"
                                    Binding="{Binding Balance}" Width="100" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{Binding MenuItemHeader}"
                              HeaderStringFormat="Size selector: {0}" Command="{Binding ShowChart}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <!--<DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Buysell}" Value="S">
                            <Setter Property="Foreground" Value="#FF5252"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Buysell}" Value="B">
                            <Setter Property="Foreground" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Buysell}" Value="">
                            <Setter Property="Foreground" Value="White"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>-->
        </DataGrid>
    </Grid>
    
</controls:MetroWindow>



