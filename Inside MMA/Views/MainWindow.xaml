<controls:MetroWindow x:Class="Inside_MMA.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Icon="pack://application:,,,/Resources/ico.ico"
        dialog:DialogParticipation.Register="{Binding}"
        Loaded="OnLoad"
        mc:Ignorable="d"
        BorderBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        Background="{DynamicResource WindowBackgroundBrush}"
        FontSize="14"
        Title="inside" Height="300" Width="400" SaveWindowPosition="True">
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button x:Name="CollapseExpandButton" Click="CollapseExpandClick">
                <Rectangle x:Name="Rectangle" Width="20"
                           Height="20"
                           Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_arrow_collapsed}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout x:Name="BrokerFlyout" Position="Right" Width="300">
                <DockPanel Background="{DynamicResource WindowBackgroundBrush}">
                    <Image DockPanel.Dock="Top" Source="pack://application:,,,/Resources/finam.png"></Image>
                    <StackPanel Margin="0 0 0 10" HorizontalAlignment="Center" DockPanel.Dock="Bottom" Orientation="Vertical">
                        <TextBlock Foreground="White">Москва+7 (495) 1-346-346</TextBlock>
                        <TextBlock HorizontalAlignment="Center">
                                <Hyperlink>ask@corp.finam.ru</Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </DockPanel>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <StackPanel>
        <Menu x:Name="Menu" DockPanel.Dock="Top" FontSize="14" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource AccentColorBrush}">

            <MenuItem Header="{Binding MenuItemConnectText}" Command="{Binding MenuItemConnectCommand, Mode=OneWay}" IsEnabled="{Binding MenuItemConnectEnabled, Mode=OneWay}"/>
            <MenuItem Header="Trade" IsEnabled="{Binding TradeEnabled}">
                <MenuItem Header="Alerts" Command="{Binding OpenWindowCommand}" CommandParameter="alerts" IsEnabled="{Binding WindowAvailabilityManager.AlertsEnabled}"/>
                <MenuItem Header="Cart" Command="{Binding OpenWindowCommand}" CommandParameter="cart" IsEnabled="{Binding WindowAvailabilityManager.CartEnabled}"/>
                <MenuItem Header="Clients" Command="{Binding OpenWindowCommand}" CommandParameter="clients"/>
                <MenuItem Header="Trades" Command="{Binding OpenWindowCommand}" CommandParameter="trades"/>
                <MenuItem Header="Orders" Command="{Binding OpenWindowCommand}" CommandParameter="orders"/>
                <MenuItem Header="Stoporders" Command="{Binding OpenWindowCommand}" CommandParameter="stoporders"/>
                <MenuItem Header="New Order" Command="{Binding OpenWindowCommand}" CommandParameter="newOrder" IsEnabled="{Binding WindowAvailabilityManager.TradingEnabled}"/>
                <MenuItem Header="New Stoporder" Command="{Binding OpenWindowCommand}" CommandParameter="newStoporder" IsEnabled="{Binding WindowAvailabilityManager.TradingEnabled}"/>
                <MenuItem Header="Fast Order" Command="{Binding OpenWindowCommand}" CommandParameter="fastOrder" IsEnabled="{Binding WindowAvailabilityManager.FastOrderEnabled}"></MenuItem>
            </MenuItem>
            <MenuItem Header="Info" IsEnabled="{Binding InfoEnabled}">
                <MenuItem Header="Watchlist" Command="{Binding OpenWindowCommand}" CommandParameter="watchlist" ItemsSource="{Binding WatchListsCollection}"/>
                <MenuItem Header="Securities" Command="{Binding SecuritiesCommand}"/>
                <MenuItem Header="Level2" Command="{Binding SecurityChooseCommand}" CommandParameter="level2" IsEnabled="{Binding WindowAvailabilityManager.Level2Enabled}"/>
                <MenuItem Header="Logbook" Command="{Binding SecurityChooseCommand}" CommandParameter="logbook" IsEnabled="{Binding WindowAvailabilityManager.LogbookEnabled}"/>
                <MenuItem Header="All Trades Pro" Command="{Binding SecurityChooseCommand}" CommandParameter="allTrades" IsEnabled="{Binding WindowAvailabilityManager.AllTradesProEnabled}" />
                <MenuItem Header="All Trades" Command="{Binding SecurityChooseCommand}" CommandParameter="allTradesSimple" IsEnabled="{Binding WindowAvailabilityManager.AllTradesEnabled}" />
                <MenuItem Header="Trades Counter" Command="{Binding SecurityChooseCommand}" CommandParameter="allTradesCounter" IsEnabled="{Binding WindowAvailabilityManager.TradesCounterEnabled}"/>
                <MenuItem Header="Trades Counter LMT" Command="{Binding SecurityChooseCommand}" CommandParameter="counterLMT" IsEnabled="{Binding WindowAvailabilityManager.TradesCounterEnabled}"/>
                <MenuItem Header="Trades Counter General" Command="{Binding SecurityChooseCommand}" CommandParameter="allTradesCounterGeneral"/>
                <MenuItem Header="Trades Counter (from file)" Command="{Binding OpenWindowCommand}" CommandParameter="allTradesCounterFile" IsEnabled="{Binding WindowAvailabilityManager.TradesCounterEnabled}"/>
                <MenuItem Header="Candlestick" Command="{Binding SecurityChooseCommand}" CommandParameter="scichart" IsEnabled="{Binding WindowAvailabilityManager.ChartEnabled}"/>
                <MenuItem Header="Spread" Command="{Binding SecurityChooseCommand}" CommandParameter="spread"/>
                <MenuItem Header="News" Command="{Binding OpenWindowCommand}" CommandParameter="news"/>
                <!--<MenuItem Header="Calendar" Command="{Binding OpenWindowCommand}" CommandParameter="calendar"/>-->
            </MenuItem>
            <MenuItem Header="Reports" IsEnabled="{Binding TradeEnabled}">
                <MenuItem Header="Balance"  Command="{Binding OpenWindowCommand}" CommandParameter="balance"></MenuItem>
            </MenuItem>
            <MenuItem x:Name="SettingsMenu" Header="Settings" IsEnabled="{Binding InfoEnabled}">
                <MenuItem Header="Change broker password" Command="{Binding ChangePassCommand}"/>
                <MenuItem Header="Save workspace" Command="{Binding SaveWorkspaceCommand}"/>
                <MenuItem Header="Load workspace" Command="{Binding LoadWorkspaceCommand}"/>
                <MenuItem StaysOpenOnClick="True">
                    <MenuItem.Template>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <StackPanel Orientation="Horizontal" Margin="25 0 0 0">
                                <Label Margin="0 0 5 0">Log level</Label>
                                <controls:NumericUpDown Minimum="1" Maximum="3" Value="{Binding LogLevel, Mode=TwoWay}" InterceptManualEnter="False"></controls:NumericUpDown>
                            </StackPanel>
                        </ControlTemplate>
                    </MenuItem.Template>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Links">
                <Hyperlink NavigateUri="http://university.trade-made.ru" RequestNavigate="Hyperlink_OnRequestNavigate" Foreground="White">
                    <Run Text="university.trade-made.ru"></Run>
                </Hyperlink>
                <Hyperlink NavigateUri="http://trade-made.ru" RequestNavigate="Hyperlink_OnRequestNavigate" Foreground="White">
                    <Run Text="trade-made.ru"></Run>
                </Hyperlink>
                <Hyperlink NavigateUri="https://edox.finam.ru" RequestNavigate="Hyperlink_OnRequestNavigate" Foreground="White">
                    <Run Text="edox.finam.ru"></Run>
                </Hyperlink>
            </MenuItem>
            <MenuItem Header="Admin" Command="{Binding OpenWindowCommand}" CommandParameter="admin" controls:VisibilityHelper.IsCollapsed="{Binding HideAdmin}"></MenuItem>
            <MenuItem Header="Sleep" Command="{Binding SleepCommand}"/>
            <!--<MenuItem x:Name="Broker" Header="Broker" Click="Broker_OnClick"/>-->
            <MenuItem Header="Help" Click="HelpClick">
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Top" Margin="5 5 5 5">
            <Label x:Name="Status" DockPanel.Dock="Left"  MinWidth="150">
                <TextBlock >
                        <Run Text="Status: " Foreground="White" />
                        <Run Text="{Binding Status}" Foreground="{Binding StatusStateColor}"/>
                </TextBlock>
            </Label>
            <Rectangle DockPanel.Dock="Right" HorizontalAlignment="Right" Width="30" Height="30" x:Name="WebIcon">
                <Rectangle.Fill>
                    <VisualBrush Visual="{StaticResource appbar_globe_wire}" />
                </Rectangle.Fill>
                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Animate}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="Begin">
                                        <Storyboard>
                                            <DoubleAnimation
                                             Storyboard.TargetProperty="Opacity"
                                             From="0"
                                             To="1"
                                             Duration="0:0:2"
                                             AutoReverse="True"
                                             RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Begin" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Animate}" Value="false">
                                <Setter Property="Opacity" Value="0"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </DockPanel>
        <TextBlock Margin="10 5 5 5" Text="{Binding LicenseExpDate, StringFormat='License expires on {0}'}"></TextBlock>
        <controls:ProgressRing IsActive="{Binding IsActive}" Margin="0 20 0 0"></controls:ProgressRing>
    </StackPanel>

</controls:MetroWindow>