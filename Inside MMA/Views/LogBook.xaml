<controls:MetroWindow x:Class="Inside_MMA.Views.LogBook"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Inside_MMA.ViewModels"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:data="clr-namespace:System.Data;assembly=System.Data"
        mc:Ignorable="d"
        BorderBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        Title="{Binding Seccode, StringFormat='Logbook {0}'}" Height="600" Width="675" SaveWindowPosition="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <!--<Button Width="30" 
                    Height="30"
                    Style="{DynamicResource MetroCircleButtonStyle}" BorderThickness="0">
                <Rectangle Width="15"
                           Height="15" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" 
                                     Visual="{StaticResource appbar_chevron_left}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Width="30"
                    Height="30"
                    Style="{DynamicResource MetroCircleButtonStyle}" BorderThickness="0">
                <Rectangle Width="15"
                           Height="15" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" 
                                     Visual="{StaticResource appbar_chevron_right}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>-->
            <Button Width="30" Command="{Binding ResetCommand}"
              Height="30"
              Style="{DynamicResource MetroCircleButtonStyle}" BorderThickness="0">
                <Rectangle Width="15"
               Height="15" Fill="White">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" 
                         Visual="{StaticResource appbar_refresh}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <local:LogbookColorConverter x:Key="LogbookColorConverter"/>
            <local:EatenSizeInRangeConverter x:Key="EatenSizeInRangeConverter"/>
            <CollectionViewSource x:Key="Source" IsLiveSortingRequested="True" Source="{Binding LogBookCollection, Mode=OneWay}">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="Price" Direction="Descending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <Style x:Key="IsIceBuy" TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsIceBuy}" Value="True"/>
                            <Condition Binding="{Binding ElementName=IceColoring, Path=IsChecked}" Value="True"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Foreground" Value="White"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="IsIceSell" TargetType="DataGridCell"
                   BasedOn="{StaticResource MetroDataGridCell}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsIceSell}" Value="True"/>
                            <Condition Binding="{Binding ElementName=IceColoring, Path=IsChecked}" Value="True"></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Foreground" Value="White"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="IsIceEatenBuy" TargetType="DataGridCell"
                   BasedOn="{StaticResource MetroDataGridCell}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IceEatenBuy}" Value="True"/>
                            <Condition Binding="{Binding ElementName=EatenColoring, Path=IsChecked}" Value="True"></Condition>
                            <Condition Value="True">
                                <Condition.Binding>
                                    <MultiBinding Converter="{StaticResource EatenSizeInRangeConverter}">
                                        <Binding Path="MaxSell"></Binding>
                                        <Binding Path="DataContext.EatenSize" RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}"></Binding>
                                    </MultiBinding>
                                </Condition.Binding>
                            </Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="BlueViolet"/>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="IsIceEatenSell" TargetType="DataGridCell"
                   BasedOn="{StaticResource MetroDataGridCell}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IceEatenSell}" Value="True"/>
                            <Condition Binding="{Binding ElementName=EatenColoring, Path=IsChecked}" Value="True"></Condition>
                            <Condition Value="True">
                                <Condition.Binding>
                                    <MultiBinding Converter="{StaticResource EatenSizeInRangeConverter}">
                                        <Binding Path="MaxBuy"></Binding>
                                        <Binding Path="DataContext.EatenSize" RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}"></Binding>
                                    </MultiBinding>
                                </Condition.Binding>
                            </Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="BlueViolet"/>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <!--<SolidColorBrush x:Key="Brush">
                <SolidColorBrush.Color>
                    -->
            <!--<Binding Path="Color" />-->
            <!--
                    <MultiBinding Converter="{StaticResource LogbookColorConverter}">
                        <Binding Path="Price"/>
                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}" Path="DataContext.BestBuy"/>
                    </MultiBinding>
                </SolidColorBrush.Color>
            </SolidColorBrush>-->
        </Grid.Resources>
        <Canvas x:Name="Canvas"  Panel.ZIndex="100" Focusable="False" Height="{Binding ActualHeight, ElementName=Expander}" Background="{DynamicResource WindowBackgroundBrush}">
            <Expander x:Name="Expander" ExpandDirection="Down" Width="{Binding ActualWidth, ElementName=Canvas}" Panel.ZIndex="100" Background="{DynamicResource WindowBackgroundBrush}" FontSize="16">
                <!--<StackPanel Orientation="Horizontal" Height="40" VerticalAlignment="Center">
                    <TextBlock FontSize="16" VerticalAlignment="Center" Margin="0 0 10 0">Ratio:</TextBlock>
                    <controls:NumericUpDown Minimum="1" Value="{Binding Coef, Mode=TwoWay}"></controls:NumericUpDown>
                </StackPanel>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Height="250">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" FontSize="16" VerticalAlignment="Center">Ratio:</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="0" FontSize="16" VerticalAlignment="Center">Size:</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0" FontSize="16" VerticalAlignment="Center" >Alert:</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="0" FontSize="16" VerticalAlignment="Center">Trigger delta:</TextBlock>
                        <TextBlock Grid.Row="4" Grid.Column="0" FontSize="16" VerticalAlignment="Center">Coloring:</TextBlock>
                        <TextBlock Grid.Row="8" Grid.Column="0" FontSize="16" VerticalAlignment="Center">Eaten size:</TextBlock>
                        <controls:NumericUpDown Grid.Row="0"  Margin="5 0 0 0" HorizontalAlignment="Left" Grid.Column="1" Minimum="1" Value="{Binding Coef, Mode=TwoWay}"/>
                        <controls:NumericUpDown Grid.Row="1"  Margin="5 0 0 0" HorizontalAlignment="Left" Grid.Column="1" Minimum="1" Value="{Binding Size, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" Margin="5 0 0 0" IsChecked="{Binding IsAlerting}" Style="{StaticResource WhiteCheckBox}"></CheckBox>
                        <controls:NumericUpDown Grid.Row="3"  Margin="5 0 0 0" HorizontalAlignment="Left" Grid.Column="1" HasDecimals="True" Interval="0.01" Minimum="0.01" Value="{Binding TriggerDelta, Mode=TwoWay}"/>
                        <CheckBox x:Name="DeltaColoring" Grid.Row="5" Grid.Column="1" IsChecked="True" Margin="5 0 0 0" FontSize="16" Style="{StaticResource WhiteCheckBox}">Delta</CheckBox>
                        <CheckBox x:Name="EatenColoring" Grid.Row="6" Grid.Column="1" IsChecked="True" Margin="5 0 0 0" FontSize="16" Style="{StaticResource WhiteCheckBox}">Eaten</CheckBox>
                        <CheckBox x:Name="IceColoring" Grid.Row="7" Grid.Column="1" IsChecked="True" Margin="5 0 0 0" FontSize="16" Style="{StaticResource WhiteCheckBox}">Ice</CheckBox>
                        <controls:NumericUpDown Grid.Row="8"  Margin="5 0 0 0" HorizontalAlignment="Left" Grid.Column="1" Minimum="1" Value="{Binding EatenSize, Mode=TwoWay}"/>
                    </Grid>
                    <DockPanel Grid.Column="1">
                        <TextBlock Margin="5" DockPanel.Dock="Top">Reset triggers</TextBlock>
                        <DataGrid BorderThickness="1" ItemsSource="{Binding Alerts}" AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Direction"
                                                    Binding="{Binding Buysell, Mode=OneWay}" Width="*"/>
                                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Price"
                                                    Binding="{Binding Price, Mode=OneWay}" Width="*"/>
                                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Delta"
                                                    Binding="{Binding Delta, Mode=OneWay}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </Expander>
        </Canvas>
        <DataGrid Grid.Row="1" x:Name="Logbook" ItemsSource="{Binding Source={StaticResource Source}}" Padding="0" IsReadOnly="True" AutoGenerateColumns="False" CanUserSortColumns="False" GridLinesVisibility="All"
                  VirtualizingStackPanel.IsVirtualizing="True" 
                  VirtualizingStackPanel.VirtualizationMode="Recycling" 
                  ScrollViewer.CanContentScroll="True">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource LogbookColorConverter}">
                                <Binding Path="Price"/>
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}" Path="DataContext.BestBuy"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Price"
                                        Binding="{Binding Price, Mode=OneWay}" Width="15*"/>
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="MaxSize"
                                        Binding="{Binding MaxSize, Mode=OneWay}" Width="20*" />
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="CurrentSize"
                                        Binding="{Binding CurrentSize, Mode=OneWay}" Width="25*" />
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Max Sell" CellStyle="{StaticResource IsIceEatenBuy}"
                                        Binding="{Binding MaxSell, Mode=OneWay}" Width="20*" />
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Ask hits" CellStyle="{StaticResource IsIceSell}"
                                        Binding="{Binding Buy, Mode=OneWay}" Width="20*" />
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Max Buy" CellStyle="{StaticResource IsIceEatenSell}"
                                    Binding="{Binding MaxBuy, Mode=OneWay}" Width="20*">
                </DataGridTextColumn>
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Bid hits" Binding="{Binding Sell, Mode=OneWay}" Width="20*" CellStyle="{StaticResource IsIceBuy}">
                </DataGridTextColumn>
                <DataGridTextColumn FontSize="13" FontWeight="Bold" Header="Delta" Binding="{Binding Delta, Mode=OneWay}" Width="20*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=DeltaColoring, Path=IsChecked}" Value="True">
                                    <Setter Property="Background" Value="Gray"></Setter>
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DeltaState}" Value="1"/>
                                        <Condition Binding="{Binding ElementName=DeltaColoring, Path=IsChecked}" Value="True"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Green" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DeltaState}" Value="2"/>
                                        <Condition Binding="{Binding ElementName=DeltaColoring, Path=IsChecked}" Value="True"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="DarkRed" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</controls:MetroWindow>



